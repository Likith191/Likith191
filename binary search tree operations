#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*left;
    struct node*right;
};
struct node *root=NULL;
struct node* createNode(int data){
    struct node * newNode = (struct node *)malloc(sizeof(struct node));
    newNode -> data = data;
    newNode -> right = NULL;
    newNode -> left = NULL;
    return newNode;
}
void insert(int data){
    struct node *newNode = createNode(data);
    if(root == NULL){
        root = newNode;
        return;
    }
    else {
        while(1){
            parent = current;
            if(data < current -> data){
                current = current ->left;
                if(current ==NULL){
                    parent -> left =newNode;
                    return;
                }
            }
            else{
                current = current->right;
                if(current == NULL){
                    parent -> right = newNode;
                    return;
                }
            }
        }
    }
}
struct node*minNode(struct node * root){
    if(root -> left != NULL){
        return minNode(root -> left);
    }
    else
    return root;
}
struct node * deleteNode(struct node *node,int value){
    if(node == NULL){
        return NULL;
        
    }
    else{
        if(value< node ->data)
        node ->left = deleteNode(node -> left,value);
    
    else if (value > node -> data)
    node -> right = deleteNode(node ->right,value);
    else {
        if(node ->left == NULL && node -> right == NULL)
        node =NULL;
        else if (node -> left == NULL){
            node = node ->right;
        }
        else if(node -> right == NULL){
            node = node -> left;
        }
       else{
           struct node * temp = minNode (node -> right);
           node -> data = temp ->data;
           node -> right = deleteNode( node -> right,temp ->data);
       } 
    }
    return node;
}
}
